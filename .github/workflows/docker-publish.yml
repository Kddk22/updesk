name: Docker Build and Publish

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  DOCKER_USERNAME: uptecps
  IMAGE_NAME: updesk

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-amd64
            type=ref,event=pr,suffix=-amd64
            type=semver,pattern={{version}},suffix=-amd64
            type=semver,pattern={{major}}.{{minor}},suffix=-amd64
            type=semver,pattern={{major}},suffix=-amd64

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=amd64
          cache-to: type=gha,mode=max,scope=amd64
          platforms: linux/amd64

  build-arm64:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-arm64
            type=ref,event=pr,suffix=-arm64
            type=semver,pattern={{version}},suffix=-arm64
            type=semver,pattern={{major}}.{{minor}},suffix=-arm64
            type=semver,pattern={{major}},suffix=-arm64

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=arm64
          cache-to: type=gha,mode=max,scope=arm64
          platforms: linux/arm64
          build-args: |
            NODE_OPTIONS=--max-old-space-size=2048

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine source tags
        id: source-tags
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "SOURCE_TAG=${VERSION}" >> $GITHUB_OUTPUT
          else
            BRANCH=${GITHUB_REF#refs/heads/}
            echo "SOURCE_TAG=${BRANCH}" >> $GITHUB_OUTPUT
          fi

      - name: Create and push manifest for branch/tag
        run: |
          SOURCE_TAG="${{ steps.source-tags.outputs.SOURCE_TAG }}"
          docker buildx imagetools create -t ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${SOURCE_TAG} \
            ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${SOURCE_TAG}-amd64 \
            ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${SOURCE_TAG}-arm64

      - name: Create and push latest manifest
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          SOURCE_TAG="${{ steps.source-tags.outputs.SOURCE_TAG }}"
          docker buildx imagetools create -t ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${SOURCE_TAG}-amd64 \
            ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${SOURCE_TAG}-arm64

  update-description:
    needs: [create-manifest]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          short-description: "UpDesk - Modern Virtual Desktop Launcher with Ubuntu-style Taskbar"
          readme-filepath: ./DOCKER-README.md
