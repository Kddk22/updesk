version: '3.8'

# UpDesk Virtual Desktop Launcher
# GitHub: https://github.com/uptec-ps/updesk
# Docker Hub: uptecps/updesk

services:
  updesk:
    # Build from local source (for development)
    build:
      context: .
      dockerfile: Dockerfile
    # Alternative: Build directly from GitHub (uncomment to use)
    # build: https://github.com/uptec-ps/updesk.git
    # Alternative: Use pre-built image from Docker Hub (uncomment to use)
    # image: uptecps/updesk:latest
    container_name: updesk-app
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
      - PORT=5002
    volumes:
      # Persist SQLite database
      - updesk_data:/app/data
      # Optional: Mount custom wallpapers
      - ./public/wallpapers:/app/public/wallpapers:ro
      # Optional: Mount custom icons
      - ./public/icons:/app/public/icons:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5002/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.updesk.description=UpDesk Virtual Desktop Launcher"
      - "com.updesk.version=1.0.0"
    networks:
      - updesk_network

  # Nginx reverse proxy for HTTP and HTTPS
  nginx:
    image: nginx:alpine
    container_name: updesk-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - updesk
    restart: unless-stopped
    networks:
      - updesk_network

volumes:
  updesk_data:
    driver: local
    labels:
      - "com.updesk.description=UpDesk SQLite database storage"

networks:
  updesk_network:
    driver: bridge
    labels:
      - "com.updesk.description=UpDesk application network"